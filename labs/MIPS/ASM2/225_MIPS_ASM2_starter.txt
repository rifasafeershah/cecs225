#Use the MARS simulator to write and execute MIPS assembly code that will perform
#the high level language pseudocode assignment statements.
#Use this file as a base and perform each exercise in order according to the 
#descriptions given in each comment.
#No pseudoinstrucions are allowed, use only the following basic MIPS instructions:
#	add	-	arithmetic add
#	sub	-	arithmetic subtract
#	and	-	bitwise and
#	or	-	bitwise or
#	slt	-	set on less than
#	nor	-	bitwise nor
#	addi	-	add with immediate data
#	beq	-	branch if equal
#	j	-	unconditional jump
#
#YOUR SUBMISSION WILL BE ASSIGNED A SCORE OF ZERO IF IT CONTAINS:
#	PSEUDOINSTRUCTIONS
#	SYNTAX ERRORS
#	INSTRUCTIONS NOT LISTED ABOVE
########################################

########################################
#Now for your assignment, complete the following exercises in order as they appear.
#Each exercise is part of a larger program and is to be done in order!
#The result of each exercise can depend on the result of previous exercises.

#Variables A through F have the following register mapping:
#	A:$10	B:$11	C:$12	D:$13	E:$14	F:$15
#For temporary storage use register $1 through $9 as needed for complex operations.

#The program will begin with the following register initializations
addi $10, $0, 10	#A = 10
addi $11, $0, 20	#B = 20
addi $12, $0, 30	#C = 30
addi $13, $0, 40	#D = 40
addi $14, $0, 50	#E = 50
addi $15, $0, 60	#F = 60

#Example 1:
#	if(A < B)
#		F = B;
#	else
#		F = A;
slt $1, $10,$11
beq $1, $0, AnotlessB
	add $15, $0, $11
	j endif_example
AnotlessB:
	add $15, $0, $10
endif_example:
########################################
#	Exercise 1:  if else statements
#	if(F < A)
#		F = F + 1;
#	else if(F < B)
#		F = F - 1;
#	else
#		F = 0x4444


########################################
#Exercise 2:  for loop
# for(A = 0; A < 5; A++)
#	E = E + E;


########################################
#Exercise 3: do while loop with nested if
#	do{
#		B += 2;
#		if(B == C)
#			B = B*2;
#	}while(B < D)


########################################
#Exercise 4:  while loop
#	D = 0
#	while( 5000 > C)
#	{	D++;
#		C +=C;
#	}
